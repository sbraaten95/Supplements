{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.interceptor.ts","./src/app/auth.service.ts","./src/app/cardiorespiratory-system/cardiorespiratory-system.component.ts","./src/app/cardiorespiratory-system/cardiorespiratory-system.component.html","./src/app/digestive-system/digestive-system.component.ts","./src/app/digestive-system/digestive-system.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/immune-system/immune-system.component.ts","./src/app/immune-system/immune-system.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/model/supplement.ts","./src/app/model/user.ts","./src/app/muscular-system/muscular-system.component.ts","./src/app/muscular-system/muscular-system.component.html","./src/app/myplan/myplan.component.ts","./src/app/myplan/myplan.component.html","./src/app/nervous-system/nervous-system.component.ts","./src/app/nervous-system/nervous-system.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/questionnaire/questionnaire.component.ts","./src/app/science/science.component.ts","./src/app/science/science.component.html","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html","./src/app/supplement.service.ts","./src/app/supplement/supplement.component.ts","./src/app/supplement/supplement.component.html","./src/app/supplements/supplements.component.ts","./src/app/supplements/supplements.component.html","./src/app/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { SupplementsComponent } from './supplements/supplements.component';\nimport { SupplementComponent } from './supplement/supplement.component';\nimport { ScienceComponent } from './science/science.component';\nimport { MyplanComponent } from './myplan/myplan.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SetupComponent } from './setup/setup.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { NervousSystemComponent } from './nervous-system/nervous-system.component';\nimport { CardiorespiratorySystemComponent } from './cardiorespiratory-system/cardiorespiratory-system.component';\nimport { DigestiveSystemComponent } from './digestive-system/digestive-system.component';\nimport { ImmuneSystemComponent } from './immune-system/immune-system.component';\nimport { MuscularSystemComponent } from './muscular-system/muscular-system.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'supplements', component: SupplementsComponent },\n  { path: 'supplements/:id', component: SupplementComponent },\n  { path: 'science', component: ScienceComponent },\n  { path: 'myplan', component: MyplanComponent },\n  { path: 'setup', component: SetupComponent },\n  { path: 'questionnaire', component: QuestionnaireComponent },\n  { path: 'nervous_system', component: NervousSystemComponent },\n  {\n    path: 'cardiorespiratory_system',\n    component: CardiorespiratorySystemComponent,\n  },\n  { path: 'digestive_system', component: DigestiveSystemComponent },\n  { path: 'immune_system', component: ImmuneSystemComponent },\n  { path: 'muscular_system', component: MuscularSystemComponent },\n  {\n    path: 'profile/:id',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './users.service';\n\nimport { User } from './model/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Supplements';\n  currentUser = new User();\n  profileUrl = `profile/${localStorage.getItem('access_token')}`;\n  _this = this;\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit() {}\n\n  logout() {\n    this.userService.logout();\n  }\n\n  loggedIn() {\n    return this.userService.isLoggedIn();\n  }\n\n  getCurrentUser() {\n    console.log(this.userService.currentUser);\n    this.currentUser = this.userService.currentUser;\n  }\n}\n","<header>\n  <div class=\"container\">\n    <nav class=\"navbar navbar-expand-md navbar-light\">\n      <a routerLink=\"/\" class=\"logo navbar-brand\">Scott's Supplements</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto text-center\">\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/\" class=\"nav-link\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/supplements\" class=\"nav-link\"\n              >Supplements</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/science\" class=\"nav-link\">Science</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/myplan\" class=\"nav-link\">My Plan</a>\n          </li>\n          <li *ngIf=\"!loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/setup\" class=\"nav-link\">Create a Plan</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"{{ profileUrl }}\" class=\"nav-link\"\n              >Profile</a\n            >\n          </li>\n          <li *ngIf=\"!loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/login\" class=\"nav-link\">Log In</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" (click)=\"logout()\">Log Out</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </div>\n</header>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AuthInterceptor } from './auth.interceptor';\n\nimport { HomeComponent } from './home/home.component';\nimport { SupplementsComponent } from './supplements/supplements.component';\nimport { ScienceComponent } from './science/science.component';\nimport { MyplanComponent } from './myplan/myplan.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SetupComponent } from './setup/setup.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\n\nimport { UserService } from './users.service';\nimport { LoginComponent } from './login/login.component';\nimport { SupplementComponent } from './supplement/supplement.component';\nimport { NervousSystemComponent } from './nervous-system/nervous-system.component';\nimport { CardiorespiratorySystemComponent } from './cardiorespiratory-system/cardiorespiratory-system.component';\nimport { DigestiveSystemComponent } from './digestive-system/digestive-system.component';\nimport { ImmuneSystemComponent } from './immune-system/immune-system.component';\nimport { MuscularSystemComponent } from './muscular-system/muscular-system.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SupplementsComponent,\n    ScienceComponent,\n    MyplanComponent,\n    ProfileComponent,\n    SetupComponent,\n    QuestionnaireComponent,\n    LoginComponent,\n    SupplementComponent,\n    NervousSystemComponent,\n    CardiorespiratorySystemComponent,\n    DigestiveSystemComponent,\n    ImmuneSystemComponent,\n    MuscularSystemComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivate,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './users.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(public userService: UserService, public router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.userService.isLoggedIn() !== true) {\n      window.alert('Access not allowed!');\n      this.router.navigate(['/setup']);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\nimport { UserService } from './users.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const accessToken = this.userService.getAccessToken();\n    req = req.clone({\n      setHeaders: {\n        Authorization: `JWT ${accessToken}`,\n      },\n    });\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  API_URL: string = 'http://localhost:4000';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = {};\n\n  constructor(private httpClient: HttpClient, public router: Router) {}\n\n  register(user: User): Observable<any> {\n    return this.httpClient\n      .post(`${this.API_URL}/users/register`, user)\n      .pipe(catchError(this.handleError));\n  }\n\n  login(user: User) {\n    return this.httpClient\n      .post<any>(`${this.API_URL}/users/login`, user)\n      .subscribe((res: any) => {\n        localStorage.setItem('access_token', res.token);\n        this.getUserProfile(res._id).subscribe((res) => {\n          this.currentUser = res;\n          this.router.navigate(['users/profile/' + res.msg._id]);\n        });\n      });\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    console.log('hi');\n    return authToken !== null ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n\n  getUserProfile(id): Observable<any> {\n    return this.httpClient\n      .get(`${this.API_URL}/users/profile/${id}`, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {};\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cardiorespiratory-system',\n  templateUrl: './cardiorespiratory-system.component.html',\n  styleUrls: ['./cardiorespiratory-system.component.scss']\n})\nexport class CardiorespiratorySystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cardiorespiratory-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-digestive-system',\n  templateUrl: './digestive-system.component.html',\n  styleUrls: ['./digestive-system.component.scss']\n})\nexport class DigestiveSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>digestive-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row my-5\">\n  <div class=\"col-sm text-center\" id=\"hometitle\">\n    <h1>WELCOME</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm text-center\">\n    <button\n      type=\"button\"\n      routerLink=\"/setup\"\n      class=\"btn btn-primary btn-lg\"\n      id=\"beginplanbutton\"\n    >\n      Start Your Plan\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-immune-system',\n  templateUrl: './immune-system.component.html',\n  styleUrls: ['./immune-system.component.scss']\n})\nexport class ImmuneSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>immune-system works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { UserService } from '../users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(\n    public fb: FormBuilder,\n    public userService: UserService,\n    public router: Router\n  ) {\n    this.mainForm();\n  }\n\n  mainForm() {\n    this.loginForm = this.fb.group({\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  loginUser() {\n    this.userService.login(this.loginForm.value);\n  }\n}\n","<div class=\"row mb-3\">\n  <div class=\"col-sm text-center\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-lg\"\n      data-toggle=\"modal\"\n      data-target=\"#loginFormModal\"\n    >\n      Log In\n    </button>\n    <div class=\"modal\" id=\"loginFormModal\" tabindex=\"1\" role=\"dialog\">\n      <div class=\"modal-dialog bg-white\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Log In</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form\n              id=\"loginForm1\"\n              [formGroup]=\"loginForm\"\n              (ngSubmit)=\"loginUser()\"\n            >\n              <div class=\"form-group\">\n                <label for=\"inputEmail3\">Email Address</label>\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  formControlName=\"email\"\n                  id=\"inputEmail3\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputPassword3\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  formControlName=\"password\"\n                  id=\"inputPassword3\"\n                />\n              </div>\n              <!--Forgot password?-->\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              form=\"loginForm1\"\n              data-toggle=\"modal\"\n              data-target=\"#loginFormModal\"\n            >\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Supplement {\n  name: string;\n  description: string;\n  category: string;\n  purchaseUrl: string;\n}\n","export class User {\n  name: string;\n  email: string;\n  password: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-muscular-system',\n  templateUrl: './muscular-system.component.html',\n  styleUrls: ['./muscular-system.component.scss']\n})\nexport class MuscularSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>muscular-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-myplan',\n  templateUrl: './myplan.component.html',\n  styleUrls: ['./myplan.component.scss']\n})\nexport class MyplanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>myplan works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nervous-system',\n  templateUrl: './nervous-system.component.html',\n  styleUrls: ['./nervous-system.component.scss']\n})\nexport class NervousSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nervous-system works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../users.service';\n\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: User;\n  userName = '';\n  userEmail = '';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService\n  ) {\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.userService.getUser(id).subscribe((res) => {\n      this.currentUser = res;\n      this.userName = this.currentUser.name;\n      this.userEmail = this.currentUser.email;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  // Get all users, delete one user and get all users\n  // readUser() {\n  //   this.userService.getUsers().subscribe((data) => {\n  //     this.User = data;\n  //   });\n  // }\n\n  // removeUser(user, index) {\n  //   this.userService.deleteUser(user._id).subscribe((data) => {\n  //     this.User.splice(index, 1);\n  //   });\n  //   this.readUser();\n  // }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <h2 class=\"mb-4\">Your User Information</h2>\n      <p>\n        <strong>Name: {{ this.userName }}</strong>\n      </p>\n      <p>\n        <strong>Email: {{ this.userEmail }}</strong>\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.scss']\n})\nexport class QuestionnaireComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-science',\n  templateUrl: './science.component.html',\n  styleUrls: ['./science.component.scss']\n})\nexport class ScienceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1><a href=\"\" routerLink=\"/nervous_system\">Nervous System</a></h1>\n<h1>\n  <a href=\"\" routerLink=\"/cardiorespiratory_system\">Cardiorespiratory System</a>\n</h1>\n<h1><a href=\"\" routerLink=\"/digestive_system\">Digestive System</a></h1>\n<h1><a href=\"\" routerLink=\"/immune_system\">Immune System</a></h1>\n<h1><a href=\"\" routerLink=\"/muscular_system\">Muscular System</a></h1>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { UserService } from '../users.service';\nimport { AppComponent } from '../app.component';\nimport { AuthService } from '../auth.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss'],\n})\nexport class SetupComponent implements OnInit {\n  submitted = false;\n  userForm: FormGroup;\n  currentUser: User;\n\n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    private router: Router,\n    private ngZone: NgZone,\n    private userService: UserService,\n    private appComponent: AppComponent\n  ) {\n    this.mainForm();\n  }\n\n  ngOnInit(): void {}\n\n  mainForm() {\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: [''],\n    });\n  }\n\n  // Getter to access form control\n  get myForm() {\n    return this.userForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return false;\n    } else {\n      this.userService.createUser(this.userForm.value).subscribe(\n        (res) => {\n          this.ngZone.run(() => this.router.navigateByUrl(`/login`));\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"m-auto\">\n  <div class=\"row mb-3\" id=\"setupContainer\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-lg\"\n        data-toggle=\"modal\"\n        data-target=\"#createAccountFormModal\"\n      >\n        Create Account\n      </button>\n      <div\n        class=\"modal\"\n        id=\"createAccountFormModal\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n      >\n        <div class=\"modal-dialog bg-white\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Create Account</h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form\n                id=\"createAccountForm\"\n                [formGroup]=\"userForm\"\n                (ngSubmit)=\"onSubmit()\"\n              >\n                <div class=\"form-group\">\n                  <label for=\"inputName\">Your Name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"inputName\"\n                    formControlName=\"name\"\n                  />\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.name.errors?.required\"\n                  >\n                    Name is required.\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"inputEmail\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail1\"\n                    formControlName=\"email\"\n                  />\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.email.errors?.required\"\n                  >\n                    Enter your email.\n                  </div>\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.email.errors?.pattern\"\n                  >\n                    Enter valid email.\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"inputEmail\">Password</label>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"inputPassword1\"\n                    formControlName=\"password\"\n                  />\n                  <small class=\"form-text text-muted\"\n                    >Contains >6 alphanumeric symbols with at least one\n                    digit.</small\n                  >\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary\"\n                form=\"createAccountForm\"\n                id=\"createAccountFormModalButton\"\n                data-toggle=\"modal\"\n                data-target=\"#createAccountFormModal\"\n              >\n                Submit\n              </button>\n\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <p>OR</p>\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-lg\"\n        data-toggle=\"modal\"\n        data-target=\"#loginFormModal\"\n      >\n        Log In\n      </button>\n      <div class=\"modal\" id=\"loginFormModal\" tabindex=\"1\" role=\"dialog\">\n        <div class=\"modal-dialog bg-white\" role=\"document\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Log In</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form id=\"loginForm\">\n              <div class=\"form-group\">\n                <label for=\"inputEmail\">Email Address</label>\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail2\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputEmail\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"inputPassword2\"\n                />\n              </div>\n              <!--Forgot password?-->\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <!--Don't forget to switch type to submit-->\n            <button type=\"button\" class=\"btn btn-primary\" form=\"loginForm\">\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <p>OR</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        routerLink=\"/questionnaire\"\n        class=\"btn btn-primary btn-lg\"\n      >\n        Continue as Guest\n      </button>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Supplement } from './model/supplement';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupplementService {\n  baseUri: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  Supplement = new Supplement();\n\n  constructor(private http: HttpClient) {}\n\n  // Create\n  createSupplement(data): Observable<any> {\n    let url = `${this.baseUri}/supplements/create`;\n    return this.http.post(url, data).pipe(catchError(this.errorMgmt));\n  }\n\n  // Get all Supplements\n  getSupplements() {\n    return this.http.get(`${this.baseUri}/supplements`);\n  }\n\n  // Get Supplement\n  getSupplement(id): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http.get(url, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  // Update Supplement\n  updateSupplement(id, data): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http\n      .put(url, data, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Delete Supplement\n  deleteSupplement(id): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http\n      .delete(url, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Supplement } from '../model/supplement';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { SupplementService } from '../supplement.service';\n\n@Component({\n  selector: 'app-supplement',\n  templateUrl: './supplement.component.html',\n  styleUrls: ['./supplement.component.scss'],\n})\nexport class SupplementComponent implements OnInit {\n  Supplement: Supplement;\n  suppName = '';\n  suppDesc = '';\n  suppCat = '';\n  suppUrl = '';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private supplementService: SupplementService\n  ) {\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.supplementService.getSupplement(id).subscribe((res) => {\n      this.Supplement = res;\n      this.suppName = this.Supplement.name;\n      this.suppDesc = this.Supplement.description;\n      this.suppCat = this.Supplement.category;\n      this.suppUrl = this.Supplement.purchaseUrl;\n    });\n    this.populateData();\n  }\n\n  ngOnInit(): void {}\n\n  populateData() {}\n}\n","<h1>{{ suppName }}</h1>\n\n<p>{{ suppDesc }}</p>\n\n<p>{{ suppCat }}</p>\n\n<p>{{ suppUrl }}</p>\n\n<a href=\"\" routerLink=\"/supplements\">Back</a>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { SupplementService } from '../supplement.service';\n\n@Component({\n  selector: 'app-supplements',\n  templateUrl: './supplements.component.html',\n  styleUrls: ['./supplements.component.scss'],\n})\nexport class SupplementsComponent implements OnInit {\n  submitted = false;\n  supplementForm: FormGroup;\n  SupplementCategory: any = [\n    'Amino Acid',\n    'Vitamin',\n    'Mineral',\n    'Nootropic',\n    'Herbal',\n  ];\n\n  Supplement: any = [];\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private supplementService: SupplementService\n  ) {\n    this.mainForm();\n    this.getSupplements();\n  }\n\n  ngOnInit(): void {}\n\n  mainForm() {\n    this.supplementForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      purchaseUrl: ['', [Validators.required]],\n    });\n  }\n\n  updateSupplementCategory(e) {\n    this.supplementForm.get('category').setValue(e, {\n      onlySelf: true,\n    });\n  }\n\n  get myForm() {\n    return this.supplementForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.supplementForm.valid) {\n      return false;\n    } else {\n      this.supplementService\n        .createSupplement(this.supplementForm.value)\n        .subscribe(\n          (res) => {\n            console.log('supplement successfully created!');\n            this.ngZone.run(() => this.router.navigateByUrl('/supplements'));\n            this.getSupplements();\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n\n  getSupplements() {\n    this.supplementService.getSupplements().subscribe((res) => {\n      this.Supplement = res;\n    });\n  }\n\n  removeSupplement(supp, index) {\n    this.supplementService.deleteSupplement(supp._id).subscribe((data) => {\n      this.Supplement.splice(index, 1);\n    });\n    this.getSupplements();\n  }\n}\n","<div class=\"container\">\n  <!-- No data message -->\n  <p *ngIf=\"Supplement.length <= 0\" class=\"no-data text-center\">\n    There is no Supplement added yet!\n  </p>\n\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-4\">\n      <!-- form card register -->\n      <div class=\"card-body\">\n        <form [formGroup]=\"supplementForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"inputName\">Name</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.name.errors?.required\"\n            >\n              Name is required.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"inputDescription\">Description</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              formControlName=\"description\"\n            />\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.description.errors?.required\"\n            >\n              Enter your decription.\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.description.errors?.pattern\"\n            >\n              Enter valid decription.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"inputCategory\">Category</label>\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"category\"\n              (change)=\"updateSupplementCategory($event.target.value)\"\n            >\n              <option value=\"\">Choose...</option>\n              <option\n                *ngFor=\"let suppCat of SupplementCategory\"\n                value=\"{{ suppCat }}\"\n                >{{ suppCat }}\n              </option>\n            </select>\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.category.errors?.required\"\n            >\n              Choose category.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"purchaseUrlInput\">Purchase Website</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              formControlName=\"purchaseUrl\"\n            />\n            <!-- error -->\n          </div>\n\n          <div class=\"form-group\">\n            <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\">\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- form card register -->\n\n    <!-- Supplement list -->\n    <table class=\"table table-bordered\" *ngIf=\"Supplement.length > 0\">\n      <thead class=\"table-success\">\n        <tr>\n          <th scope=\"col\">Supplement ID</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Description</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Purchase URL</th>\n          <th scope=\"col center\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supp of Supplement; let i = index\">\n          <th scope=\"row\">{{ supp._id }}</th>\n          <td>\n            <a href=\"\" [routerLink]=\"['/supplements/', supp._id]\">{{\n              supp.name\n            }}</a>\n          </td>\n          <td>{{ supp.description }}</td>\n          <td>{{ supp.category }}</td>\n          <td>{{ supp.purchaseUrl }}</td>\n          <td class=\"text-center edit-block\">\n            <!-- <span class=\"delete\" (click)=\"removeSupplement(supp, i)\">\n            <button type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </span> -->\n            <span class=\"delete\" (click)=\"removeSupplement(supp, i)\">\n              <button type=\"button\" class=\"btn btn-danger btn-sm\">\n                Delete\n              </button>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  baseUri: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = new User();\n\n  constructor(private http: HttpClient, public router: Router) {}\n\n  getCurrentUser() {\n    let id = localStorage.getItem('access_token');\n    this.getUser(id).subscribe((res) => {\n      this.currentUser = res;\n    });\n    console.log(this.currentUser);\n  }\n\n  // Create\n  createUser(data): Observable<any> {\n    let url = `${this.baseUri}/users/register`;\n    return this.http.post(url, data).pipe(catchError(this.errorMgmt));\n  }\n\n  login(user: User) {\n    let url = `${this.baseUri}/users/login`;\n    return this.http.post<any>(url, user).subscribe((res: any) => {\n      localStorage.setItem('access_token', res[0]._id);\n      this.getUser(res[0]._id).subscribe((res) => {\n        this.currentUser = res;\n        this.router.navigate(['profile/' + res._id]);\n      });\n    });\n  }\n\n  isLoggedIn() {\n    let authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  // Get all employees\n  getUsers() {\n    return this.http.get(`${this.baseUri}/users`);\n  }\n\n  // Get employee\n  getUser(id): Observable<any> {\n    let url = `${this.baseUri}/users/${id}`;\n    return this.http.get(url, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  // Update employee\n  updateUser(id, data): Observable<any> {\n    let url = `${this.baseUri}/update/${id}`;\n    return this.http\n      .put(url, data, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Delete employee\n  deleteUser(id): Observable<any> {\n    let url = `${this.baseUri}/delete/${id}`;\n    return this.http.delete(url).pipe(catchError(this.errorMgmt));\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  supplementServer: 'http://localhost:8080',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}