{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.interceptor.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/cardiorespiratory-system/cardiorespiratory-system.component.ts","webpack:///src/app/cardiorespiratory-system/cardiorespiratory-system.component.html","webpack:///src/app/digestive-system/digestive-system.component.ts","webpack:///src/app/digestive-system/digestive-system.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/immune-system/immune-system.component.ts","webpack:///src/app/immune-system/immune-system.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/supplement.ts","webpack:///src/app/model/user.ts","webpack:///src/app/muscular-system/muscular-system.component.ts","webpack:///src/app/muscular-system/muscular-system.component.html","webpack:///src/app/myplan/myplan.component.ts","webpack:///src/app/myplan/myplan.component.html","webpack:///src/app/nervous-system/nervous-system.component.ts","webpack:///src/app/nervous-system/nervous-system.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/questionnaire/questionnaire.component.ts","webpack:///src/app/science/science.component.ts","webpack:///src/app/science/science.component.html","webpack:///src/app/setup/setup.component.ts","webpack:///src/app/setup/setup.component.html","webpack:///src/app/supplement.service.ts","webpack:///src/app/supplement/supplement.component.ts","webpack:///src/app/supplement/supplement.component.html","webpack:///src/app/supplements/supplements.component.ts","webpack:///src/app/supplements/supplements.component.html","webpack:///src/app/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","userService","title","currentUser","profileUrl","localStorage","getItem","_this","logout","isLoggedIn","console","log","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","next","state","window","alert","navigate","providedIn","AuthInterceptor","accessToken","getAccessToken","clone","setHeaders","Authorization","handle","AuthService","httpClient","API_URL","headers","set","user","post","pipe","handleError","subscribe","res","setItem","token","getUserProfile","_id","msg","authToken","removeItem","get","error","ErrorEvent","message","status","CardiorespiratorySystemComponent","DigestiveSystemComponent","HomeComponent","ImmuneSystemComponent","LoginComponent","fb","mainForm","loginForm","group","email","required","pattern","password","login","value","loginUser","Supplement","User","MuscularSystemComponent","MyplanComponent","NervousSystemComponent","ProfileComponent","activatedRoute","userName","userEmail","snapshot","paramMap","getUser","name","QuestionnaireComponent","ScienceComponent","SetupComponent","authService","ngZone","appComponent","submitted","userForm","valid","createUser","run","navigateByUrl","controls","onSubmit","SupplementService","http","baseUri","data","url","errorMgmt","put","errorMessage","SupplementComponent","supplementService","suppName","suppDesc","suppCat","suppUrl","getSupplement","description","category","purchaseUrl","populateData","SupplementsComponent","SupplementCategory","getSupplements","supplementForm","setValue","onlySelf","createSupplement","supp","index","deleteSupplement","splice","updateSupplementCategory","UserService","environment","production","supplementServer","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { SupplementsComponent } from './supplements/supplements.component';\nimport { SupplementComponent } from './supplement/supplement.component';\nimport { ScienceComponent } from './science/science.component';\nimport { MyplanComponent } from './myplan/myplan.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SetupComponent } from './setup/setup.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { NervousSystemComponent } from './nervous-system/nervous-system.component';\nimport { CardiorespiratorySystemComponent } from './cardiorespiratory-system/cardiorespiratory-system.component';\nimport { DigestiveSystemComponent } from './digestive-system/digestive-system.component';\nimport { ImmuneSystemComponent } from './immune-system/immune-system.component';\nimport { MuscularSystemComponent } from './muscular-system/muscular-system.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'supplements', component: SupplementsComponent },\n  { path: 'supplements/:id', component: SupplementComponent },\n  { path: 'science', component: ScienceComponent },\n  { path: 'myplan', component: MyplanComponent },\n  { path: 'setup', component: SetupComponent },\n  { path: 'questionnaire', component: QuestionnaireComponent },\n  { path: 'nervous_system', component: NervousSystemComponent },\n  {\n    path: 'cardiorespiratory_system',\n    component: CardiorespiratorySystemComponent,\n  },\n  { path: 'digestive_system', component: DigestiveSystemComponent },\n  { path: 'immune_system', component: ImmuneSystemComponent },\n  { path: 'muscular_system', component: MuscularSystemComponent },\n  {\n    path: 'profile/:id',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './users.service';\n\nimport { User } from './model/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Supplements';\n  currentUser = new User();\n  profileUrl = `profile/${localStorage.getItem('access_token')}`;\n  _this = this;\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit() {}\n\n  logout() {\n    this.userService.logout();\n  }\n\n  loggedIn() {\n    return this.userService.isLoggedIn();\n  }\n\n  getCurrentUser() {\n    console.log(this.userService.currentUser);\n    this.currentUser = this.userService.currentUser;\n  }\n}\n","<header>\n  <div class=\"container\">\n    <nav class=\"navbar navbar-expand-md navbar-light\">\n      <a routerLink=\"/\" class=\"logo navbar-brand\">Scott's Supplements</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto text-center\">\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/\" class=\"nav-link\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/supplements\" class=\"nav-link\"\n              >Supplements</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/science\" class=\"nav-link\">Science</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/myplan\" class=\"nav-link\">My Plan</a>\n          </li>\n          <li *ngIf=\"!loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/setup\" class=\"nav-link\">Create a Plan</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"{{ profileUrl }}\" class=\"nav-link\"\n              >Profile</a\n            >\n          </li>\n          <li *ngIf=\"!loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" routerLink=\"/login\" class=\"nav-link\">Log In</a>\n          </li>\n          <li *ngIf=\"loggedIn()\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" (click)=\"logout()\">Log Out</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </div>\n</header>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AuthInterceptor } from './auth.interceptor';\n\nimport { HomeComponent } from './home/home.component';\nimport { SupplementsComponent } from './supplements/supplements.component';\nimport { ScienceComponent } from './science/science.component';\nimport { MyplanComponent } from './myplan/myplan.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SetupComponent } from './setup/setup.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\n\nimport { UserService } from './users.service';\nimport { LoginComponent } from './login/login.component';\nimport { SupplementComponent } from './supplement/supplement.component';\nimport { NervousSystemComponent } from './nervous-system/nervous-system.component';\nimport { CardiorespiratorySystemComponent } from './cardiorespiratory-system/cardiorespiratory-system.component';\nimport { DigestiveSystemComponent } from './digestive-system/digestive-system.component';\nimport { ImmuneSystemComponent } from './immune-system/immune-system.component';\nimport { MuscularSystemComponent } from './muscular-system/muscular-system.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SupplementsComponent,\n    ScienceComponent,\n    MyplanComponent,\n    ProfileComponent,\n    SetupComponent,\n    QuestionnaireComponent,\n    LoginComponent,\n    SupplementComponent,\n    NervousSystemComponent,\n    CardiorespiratorySystemComponent,\n    DigestiveSystemComponent,\n    ImmuneSystemComponent,\n    MuscularSystemComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  CanActivate,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './users.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(public userService: UserService, public router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.userService.isLoggedIn() !== true) {\n      window.alert('Access not allowed!');\n      this.router.navigate(['/setup']);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n} from '@angular/common/http';\nimport { UserService } from './users.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const accessToken = this.userService.getAccessToken();\n    req = req.clone({\n      setHeaders: {\n        Authorization: `JWT ${accessToken}`,\n      },\n    });\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  API_URL: string = 'http://localhost:4000';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = {};\n\n  constructor(private httpClient: HttpClient, public router: Router) {}\n\n  register(user: User): Observable<any> {\n    return this.httpClient\n      .post(`${this.API_URL}/users/register`, user)\n      .pipe(catchError(this.handleError));\n  }\n\n  login(user: User) {\n    return this.httpClient\n      .post<any>(`${this.API_URL}/users/login`, user)\n      .subscribe((res: any) => {\n        localStorage.setItem('access_token', res.token);\n        this.getUserProfile(res._id).subscribe((res) => {\n          this.currentUser = res;\n          this.router.navigate(['users/profile/' + res.msg._id]);\n        });\n      });\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    console.log('hi');\n    return authToken !== null ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n\n  getUserProfile(id): Observable<any> {\n    return this.httpClient\n      .get(`${this.API_URL}/users/profile/${id}`, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {};\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cardiorespiratory-system',\n  templateUrl: './cardiorespiratory-system.component.html',\n  styleUrls: ['./cardiorespiratory-system.component.scss']\n})\nexport class CardiorespiratorySystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cardiorespiratory-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-digestive-system',\n  templateUrl: './digestive-system.component.html',\n  styleUrls: ['./digestive-system.component.scss']\n})\nexport class DigestiveSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>digestive-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row my-5\">\n  <div class=\"col-sm text-center\" id=\"hometitle\">\n    <h1>WELCOME</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm text-center\">\n    <button\n      type=\"button\"\n      routerLink=\"/setup\"\n      class=\"btn btn-primary btn-lg\"\n      id=\"beginplanbutton\"\n    >\n      Start Your Plan\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-immune-system',\n  templateUrl: './immune-system.component.html',\n  styleUrls: ['./immune-system.component.scss']\n})\nexport class ImmuneSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>immune-system works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { UserService } from '../users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(\n    public fb: FormBuilder,\n    public userService: UserService,\n    public router: Router\n  ) {\n    this.mainForm();\n  }\n\n  mainForm() {\n    this.loginForm = this.fb.group({\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  loginUser() {\n    this.userService.login(this.loginForm.value);\n  }\n}\n","<div class=\"row mb-3\">\n  <div class=\"col-sm text-center\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-lg\"\n      data-toggle=\"modal\"\n      data-target=\"#loginFormModal\"\n    >\n      Log In\n    </button>\n    <div class=\"modal\" id=\"loginFormModal\" tabindex=\"1\" role=\"dialog\">\n      <div class=\"modal-dialog bg-white\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Log In</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form\n              id=\"loginForm1\"\n              [formGroup]=\"loginForm\"\n              (ngSubmit)=\"loginUser()\"\n            >\n              <div class=\"form-group\">\n                <label for=\"inputEmail3\">Email Address</label>\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  formControlName=\"email\"\n                  id=\"inputEmail3\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputPassword3\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  formControlName=\"password\"\n                  id=\"inputPassword3\"\n                />\n              </div>\n              <!--Forgot password?-->\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              form=\"loginForm1\"\n              data-toggle=\"modal\"\n              data-target=\"#loginFormModal\"\n            >\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Supplement {\n  name: string;\n  description: string;\n  category: string;\n  purchaseUrl: string;\n}\n","export class User {\n  name: string;\n  email: string;\n  password: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-muscular-system',\n  templateUrl: './muscular-system.component.html',\n  styleUrls: ['./muscular-system.component.scss']\n})\nexport class MuscularSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>muscular-system works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-myplan',\n  templateUrl: './myplan.component.html',\n  styleUrls: ['./myplan.component.scss']\n})\nexport class MyplanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>myplan works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nervous-system',\n  templateUrl: './nervous-system.component.html',\n  styleUrls: ['./nervous-system.component.scss']\n})\nexport class NervousSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nervous-system works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../users.service';\n\nimport { User } from '../model/user';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: User;\n  userName = '';\n  userEmail = '';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService\n  ) {\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.userService.getUser(id).subscribe((res) => {\n      this.currentUser = res;\n      this.userName = this.currentUser.name;\n      this.userEmail = this.currentUser.email;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  // Get all users, delete one user and get all users\n  // readUser() {\n  //   this.userService.getUsers().subscribe((data) => {\n  //     this.User = data;\n  //   });\n  // }\n\n  // removeUser(user, index) {\n  //   this.userService.deleteUser(user._id).subscribe((data) => {\n  //     this.User.splice(index, 1);\n  //   });\n  //   this.readUser();\n  // }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <h2 class=\"mb-4\">Your User Information</h2>\n      <p>\n        <strong>Name: {{ this.userName }}</strong>\n      </p>\n      <p>\n        <strong>Email: {{ this.userEmail }}</strong>\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.scss']\n})\nexport class QuestionnaireComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-science',\n  templateUrl: './science.component.html',\n  styleUrls: ['./science.component.scss']\n})\nexport class ScienceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1><a href=\"\" routerLink=\"/nervous_system\">Nervous System</a></h1>\n<h1>\n  <a href=\"\" routerLink=\"/cardiorespiratory_system\">Cardiorespiratory System</a>\n</h1>\n<h1><a href=\"\" routerLink=\"/digestive_system\">Digestive System</a></h1>\n<h1><a href=\"\" routerLink=\"/immune_system\">Immune System</a></h1>\n<h1><a href=\"\" routerLink=\"/muscular_system\">Muscular System</a></h1>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { UserService } from '../users.service';\nimport { AppComponent } from '../app.component';\nimport { AuthService } from '../auth.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss'],\n})\nexport class SetupComponent implements OnInit {\n  submitted = false;\n  userForm: FormGroup;\n  currentUser: User;\n\n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    private router: Router,\n    private ngZone: NgZone,\n    private userService: UserService,\n    private appComponent: AppComponent\n  ) {\n    this.mainForm();\n  }\n\n  ngOnInit(): void {}\n\n  mainForm() {\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n        ],\n      ],\n      password: [''],\n    });\n  }\n\n  // Getter to access form control\n  get myForm() {\n    return this.userForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return false;\n    } else {\n      this.userService.createUser(this.userForm.value).subscribe(\n        (res) => {\n          this.ngZone.run(() => this.router.navigateByUrl(`/login`));\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"m-auto\">\n  <div class=\"row mb-3\" id=\"setupContainer\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-lg\"\n        data-toggle=\"modal\"\n        data-target=\"#createAccountFormModal\"\n      >\n        Create Account\n      </button>\n      <div\n        class=\"modal\"\n        id=\"createAccountFormModal\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n      >\n        <div class=\"modal-dialog bg-white\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Create Account</h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form\n                id=\"createAccountForm\"\n                [formGroup]=\"userForm\"\n                (ngSubmit)=\"onSubmit()\"\n              >\n                <div class=\"form-group\">\n                  <label for=\"inputName\">Your Name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"inputName\"\n                    formControlName=\"name\"\n                  />\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.name.errors?.required\"\n                  >\n                    Name is required.\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"inputEmail\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail1\"\n                    formControlName=\"email\"\n                  />\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.email.errors?.required\"\n                  >\n                    Enter your email.\n                  </div>\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"submitted && myForm.email.errors?.pattern\"\n                  >\n                    Enter valid email.\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"inputEmail\">Password</label>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"inputPassword1\"\n                    formControlName=\"password\"\n                  />\n                  <small class=\"form-text text-muted\"\n                    >Contains >6 alphanumeric symbols with at least one\n                    digit.</small\n                  >\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary\"\n                form=\"createAccountForm\"\n                id=\"createAccountFormModalButton\"\n                data-toggle=\"modal\"\n                data-target=\"#createAccountFormModal\"\n              >\n                Submit\n              </button>\n\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <p>OR</p>\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-lg\"\n        data-toggle=\"modal\"\n        data-target=\"#loginFormModal\"\n      >\n        Log In\n      </button>\n      <div class=\"modal\" id=\"loginFormModal\" tabindex=\"1\" role=\"dialog\">\n        <div class=\"modal-dialog bg-white\" role=\"document\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Log In</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form id=\"loginForm\">\n              <div class=\"form-group\">\n                <label for=\"inputEmail\">Email Address</label>\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail2\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputEmail\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"inputPassword2\"\n                />\n              </div>\n              <!--Forgot password?-->\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <!--Don't forget to switch type to submit-->\n            <button type=\"button\" class=\"btn btn-primary\" form=\"loginForm\">\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <p>OR</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm text-center\">\n      <button\n        type=\"button\"\n        routerLink=\"/questionnaire\"\n        class=\"btn btn-primary btn-lg\"\n      >\n        Continue as Guest\n      </button>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Supplement } from './model/supplement';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupplementService {\n  baseUri: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  Supplement = new Supplement();\n\n  constructor(private http: HttpClient) {}\n\n  // Create\n  createSupplement(data): Observable<any> {\n    let url = `${this.baseUri}/supplements/create`;\n    return this.http.post(url, data).pipe(catchError(this.errorMgmt));\n  }\n\n  // Get all Supplements\n  getSupplements() {\n    return this.http.get(`${this.baseUri}/supplements`);\n  }\n\n  // Get Supplement\n  getSupplement(id): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http.get(url, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  // Update Supplement\n  updateSupplement(id, data): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http\n      .put(url, data, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Delete Supplement\n  deleteSupplement(id): Observable<any> {\n    let url = `${this.baseUri}/supplements/${id}`;\n    return this.http\n      .delete(url, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Supplement } from '../model/supplement';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { SupplementService } from '../supplement.service';\n\n@Component({\n  selector: 'app-supplement',\n  templateUrl: './supplement.component.html',\n  styleUrls: ['./supplement.component.scss'],\n})\nexport class SupplementComponent implements OnInit {\n  Supplement: Supplement;\n  suppName = '';\n  suppDesc = '';\n  suppCat = '';\n  suppUrl = '';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private supplementService: SupplementService\n  ) {\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.supplementService.getSupplement(id).subscribe((res) => {\n      this.Supplement = res;\n      this.suppName = this.Supplement.name;\n      this.suppDesc = this.Supplement.description;\n      this.suppCat = this.Supplement.category;\n      this.suppUrl = this.Supplement.purchaseUrl;\n    });\n    this.populateData();\n  }\n\n  ngOnInit(): void {}\n\n  populateData() {}\n}\n","<h1>{{ suppName }}</h1>\n\n<p>{{ suppDesc }}</p>\n\n<p>{{ suppCat }}</p>\n\n<p>{{ suppUrl }}</p>\n\n<a href=\"\" routerLink=\"/supplements\">Back</a>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { SupplementService } from '../supplement.service';\n\n@Component({\n  selector: 'app-supplements',\n  templateUrl: './supplements.component.html',\n  styleUrls: ['./supplements.component.scss'],\n})\nexport class SupplementsComponent implements OnInit {\n  submitted = false;\n  supplementForm: FormGroup;\n  SupplementCategory: any = [\n    'Amino Acid',\n    'Vitamin',\n    'Mineral',\n    'Nootropic',\n    'Herbal',\n  ];\n\n  Supplement: any = [];\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private supplementService: SupplementService\n  ) {\n    this.mainForm();\n    this.getSupplements();\n  }\n\n  ngOnInit(): void {}\n\n  mainForm() {\n    this.supplementForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      purchaseUrl: ['', [Validators.required]],\n    });\n  }\n\n  updateSupplementCategory(e) {\n    this.supplementForm.get('category').setValue(e, {\n      onlySelf: true,\n    });\n  }\n\n  get myForm() {\n    return this.supplementForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.supplementForm.valid) {\n      return false;\n    } else {\n      this.supplementService\n        .createSupplement(this.supplementForm.value)\n        .subscribe(\n          (res) => {\n            console.log('supplement successfully created!');\n            this.ngZone.run(() => this.router.navigateByUrl('/supplements'));\n            this.getSupplements();\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n\n  getSupplements() {\n    this.supplementService.getSupplements().subscribe((res) => {\n      this.Supplement = res;\n    });\n  }\n\n  removeSupplement(supp, index) {\n    this.supplementService.deleteSupplement(supp._id).subscribe((data) => {\n      this.Supplement.splice(index, 1);\n    });\n    this.getSupplements();\n  }\n}\n","<div class=\"container\">\n  <!-- No data message -->\n  <p *ngIf=\"Supplement.length <= 0\" class=\"no-data text-center\">\n    There is no Supplement added yet!\n  </p>\n\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-4\">\n      <!-- form card register -->\n      <div class=\"card-body\">\n        <form [formGroup]=\"supplementForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"inputName\">Name</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.name.errors?.required\"\n            >\n              Name is required.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"inputDescription\">Description</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              formControlName=\"description\"\n            />\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.description.errors?.required\"\n            >\n              Enter your decription.\n            </div>\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.description.errors?.pattern\"\n            >\n              Enter valid decription.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"inputCategory\">Category</label>\n            <select\n              class=\"custom-select form-control\"\n              formControlName=\"category\"\n              (change)=\"updateSupplementCategory($event.target.value)\"\n            >\n              <option value=\"\">Choose...</option>\n              <option\n                *ngFor=\"let suppCat of SupplementCategory\"\n                value=\"{{ suppCat }}\"\n                >{{ suppCat }}\n              </option>\n            </select>\n            <!-- error -->\n            <div\n              class=\"invalid-feedback\"\n              *ngIf=\"submitted && myForm.category.errors?.required\"\n            >\n              Choose category.\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"purchaseUrlInput\">Purchase Website</label>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              formControlName=\"purchaseUrl\"\n            />\n            <!-- error -->\n          </div>\n\n          <div class=\"form-group\">\n            <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\">\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- form card register -->\n\n    <!-- Supplement list -->\n    <table class=\"table table-bordered\" *ngIf=\"Supplement.length > 0\">\n      <thead class=\"table-success\">\n        <tr>\n          <th scope=\"col\">Supplement ID</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Description</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Purchase URL</th>\n          <th scope=\"col center\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supp of Supplement; let i = index\">\n          <th scope=\"row\">{{ supp._id }}</th>\n          <td>\n            <a href=\"\" [routerLink]=\"['/supplements/', supp._id]\">{{\n              supp.name\n            }}</a>\n          </td>\n          <td>{{ supp.description }}</td>\n          <td>{{ supp.category }}</td>\n          <td>{{ supp.purchaseUrl }}</td>\n          <td class=\"text-center edit-block\">\n            <!-- <span class=\"delete\" (click)=\"removeSupplement(supp, i)\">\n            <button type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </span> -->\n            <span class=\"delete\" (click)=\"removeSupplement(supp, i)\">\n              <button type=\"button\" class=\"btn btn-danger btn-sm\">\n                Delete\n              </button>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { User } from './model/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  baseUri: string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = new User();\n\n  constructor(private http: HttpClient, public router: Router) {}\n\n  getCurrentUser() {\n    let id = localStorage.getItem('access_token');\n    this.getUser(id).subscribe((res) => {\n      this.currentUser = res;\n    });\n    console.log(this.currentUser);\n  }\n\n  // Create\n  createUser(data): Observable<any> {\n    let url = `${this.baseUri}/users/register`;\n    return this.http.post(url, data).pipe(catchError(this.errorMgmt));\n  }\n\n  login(user: User) {\n    let url = `${this.baseUri}/users/login`;\n    return this.http.post<any>(url, user).subscribe((res: any) => {\n      localStorage.setItem('access_token', res[0]._id);\n      this.getUser(res[0]._id).subscribe((res) => {\n        this.currentUser = res;\n        this.router.navigate(['profile/' + res._id]);\n      });\n    });\n  }\n\n  isLoggedIn() {\n    let authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  // Get all employees\n  getUsers() {\n    return this.http.get(`${this.baseUri}/users`);\n  }\n\n  // Get employee\n  getUser(id): Observable<any> {\n    let url = `${this.baseUri}/users/${id}`;\n    return this.http.get(url, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  // Update employee\n  updateUser(id, data): Observable<any> {\n    let url = `${this.baseUri}/update/${id}`;\n    return this.http\n      .put(url, data, { headers: this.headers })\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  // Delete employee\n  deleteUser(id): Observable<any> {\n    let url = `${this.baseUri}/delete/${id}`;\n    return this.http.delete(url).pipe(catchError(this.errorMgmt));\n  }\n\n  // Error handling\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  supplementServer: 'http://localhost:8080',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}